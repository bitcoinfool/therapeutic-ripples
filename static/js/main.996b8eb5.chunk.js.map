{"version":3,"sources":["RippleCanvas.js","App.js","reportWebVitals.js","index.js"],"names":["RippleCanvas","canvasRef","useRef","ripplesRef","particlesRef","audioContextRef","lastChimeFrequencyRef","ambientStarted","showWelcome","setShowWelcome","useState","welcomeOpacity","setWelcomeOpacity","handleClickRef","useEffect","setTimeout","current","window","AudioContext","webkitAudioContext","canvas","ctx","getContext","setCanvasSize","width","innerWidth","height","innerHeight","fillStyle","fillRect","addEventListener","addRipple","x","y","variation","offsetX","Math","random","offsetY","randomRadius","push","startTime","performance","now","maxRadius","handleClick","e","state","resume","rect","getBoundingClientRect","clientX","left","clientY","top","i","playChime","audioCtx","oscillator","createOscillator","frequency","type","harmonicMultipliers","multiplier","floor","length","frequencies","setValueAtTime","currentTime","gainNode","createGain","gain","linearRampToValueAtTime","delay","createDelay","delayTime","value","echoGain","connect","destination","start","stop","animate","hue","bgGradient","createLinearGradient","addColorStop","globalCompositeOperation","vx","vy","size","creationTime","lifetime","p","age","alpha","max","beginPath","arc","PI","fill","splice","ripple","progress","radius","opacity","lineWidth","innerEdge","outerEdge","gradient","createRadialGradient","strokeStyle","stroke","requestAnimationFrame","removeEventListener","React","createElement","style","position","ref","display","onClick","playAmbientMusic","ambientOsc","ambientGain","backgroundColor","color","flexDirection","justifyContent","alignItems","textAlign","zIndex","padding","transition","fontSize","marginTop","href","target","rel","textDecoration","App","className","reportWebVitals","onPerfEntry","Function","__webpack_require__","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.996b8eb5.chunk.js","sourcesContent":["import React, { useRef, useEffect, useState } from 'react';\r\n\r\nconst RippleCanvas = () => {\r\n  const canvasRef = useRef(null);\r\n  const ripplesRef = useRef([]);\r\n  const particlesRef = useRef([]);\r\n  const audioContextRef = useRef(null);\r\n  const lastChimeFrequencyRef = useRef(null);\r\n  const ambientStarted = useRef(false);\r\n  const [showWelcome, setShowWelcome] = useState(true);\r\n  const [welcomeOpacity, setWelcomeOpacity] = useState(0);\r\n  const handleClickRef = useRef(null);\r\n\r\n  // Define ambient music function outside useEffect so it can be called on tap.\r\n  const playAmbientMusic = () => {\r\n    const audioCtx = audioContextRef.current;\r\n    if (!audioCtx) return;\r\n    if (ambientStarted.current) return; // start only once\r\n    ambientStarted.current = true;\r\n    const ambientOsc = audioCtx.createOscillator();\r\n    ambientOsc.type = 'sine';\r\n    ambientOsc.frequency.setValueAtTime(55, audioCtx.currentTime);\r\n    const ambientGain = audioCtx.createGain();\r\n    ambientGain.gain.setValueAtTime(0.03, audioCtx.currentTime);\r\n    ambientOsc.connect(ambientGain);\r\n    ambientGain.connect(audioCtx.destination);\r\n    ambientOsc.start();\r\n  };\r\n\r\n  useEffect(() => {\r\n    // Fade in the welcome overlay on mount.\r\n    setTimeout(() => setWelcomeOpacity(1), 50);\r\n\r\n    // Create AudioContext.\r\n    audioContextRef.current = new (window.AudioContext || window.webkitAudioContext)();\r\n\r\n    const canvas = canvasRef.current;\r\n    const ctx = canvas.getContext('2d');\r\n\r\n    // Set canvas dimensions.\r\n    const setCanvasSize = () => {\r\n      canvas.width = window.innerWidth;\r\n      canvas.height = window.innerHeight;\r\n      ctx.fillStyle = 'black';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n    };\r\n    setCanvasSize();\r\n    window.addEventListener('resize', setCanvasSize);\r\n\r\n    // Add a ripple with random variation.\r\n    const addRipple = (x, y, variation) => {\r\n      const offsetX = (Math.random() - 0.5) * 20;\r\n      const offsetY = (Math.random() - 0.5) * 20;\r\n      const randomRadius = Math.random() * 200 + 900;\r\n      ripplesRef.current.push({\r\n        x: x + offsetX,\r\n        y: y + offsetY,\r\n        startTime: performance.now(),\r\n        maxRadius: randomRadius + variation * 50,\r\n      });\r\n    };\r\n\r\n    // Play a soft chime with echo effects.\r\n    const playChime = () => {\r\n      const audioCtx = audioContextRef.current;\r\n      const oscillator = audioCtx.createOscillator();\r\n      oscillator.type = 'sine';\r\n      let frequency;\r\n      if (lastChimeFrequencyRef.current && Math.random() < 0.5) {\r\n        const harmonicMultipliers = [1, 1.25, 1.5, 0.8, 0.67];\r\n        const multiplier = harmonicMultipliers[Math.floor(Math.random() * harmonicMultipliers.length)];\r\n        frequency = lastChimeFrequencyRef.current * multiplier;\r\n      } else {\r\n        const frequencies = [396, 417, 432, 528, 639, 741, 852];\r\n        frequency = frequencies[Math.floor(Math.random() * frequencies.length)];\r\n      }\r\n      lastChimeFrequencyRef.current = frequency;\r\n      oscillator.frequency.setValueAtTime(frequency, audioCtx.currentTime);\r\n\r\n      const gainNode = audioCtx.createGain();\r\n      gainNode.gain.setValueAtTime(0, audioCtx.currentTime);\r\n      gainNode.gain.linearRampToValueAtTime(0.3, audioCtx.currentTime + 0.1);\r\n      gainNode.gain.linearRampToValueAtTime(0.001, audioCtx.currentTime + 4.5);\r\n\r\n      const delay = audioCtx.createDelay();\r\n      delay.delayTime.value = 0.2;\r\n      const echoGain = audioCtx.createGain();\r\n      echoGain.gain.value = 0.1;\r\n\r\n      oscillator.connect(gainNode);\r\n      gainNode.connect(audioCtx.destination);\r\n      gainNode.connect(delay);\r\n      delay.connect(echoGain);\r\n      echoGain.connect(audioCtx.destination);\r\n\r\n      oscillator.start();\r\n      oscillator.stop(audioCtx.currentTime + 4.5);\r\n    };\r\n\r\n    const handleClick = (e) => {\r\n      if (audioContextRef.current.state === 'suspended') {\r\n        audioContextRef.current.resume();\r\n      }\r\n      const rect = canvas.getBoundingClientRect();\r\n      const x = e.clientX - rect.left;\r\n      const y = e.clientY - rect.top;\r\n      for (let i = 0; i < 3; i++) {\r\n        addRipple(x, y, i);\r\n      }\r\n      playChime();\r\n    };\r\n\r\n    // Store the click handler in a ref for future use.\r\n    handleClickRef.current = handleClick;\r\n    canvas.addEventListener('click', handleClick);\r\n\r\n    const animate = () => {\r\n      const currentTime = performance.now();\r\n      const hue = (currentTime / 50) % 360;\r\n      const bgGradient = ctx.createLinearGradient(0, 0, canvas.width, canvas.height);\r\n      bgGradient.addColorStop(0, `hsl(${hue}, 50%, 5%)`);\r\n      bgGradient.addColorStop(1, `hsl(${(hue + 60) % 360}, 50%, 10%)`);\r\n      ctx.globalCompositeOperation = 'source-over';\r\n      ctx.fillStyle = bgGradient;\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n      ctx.fillStyle = 'rgba(0, 0, 0, 0.05)';\r\n      ctx.fillRect(0, 0, canvas.width, canvas.height);\r\n\r\n      if (Math.random() < 0.02) {\r\n        particlesRef.current.push({\r\n          x: Math.random() * canvas.width,\r\n          y: Math.random() * canvas.height,\r\n          vx: (Math.random() - 0.5) * 0.5,\r\n          vy: (Math.random() - 0.5) * 0.5,\r\n          size: Math.random() * 2 + 1,\r\n          creationTime: currentTime,\r\n          lifetime: 8000,\r\n        });\r\n      }\r\n      for (let i = particlesRef.current.length - 1; i >= 0; i--) {\r\n        const p = particlesRef.current[i];\r\n        const age = currentTime - p.creationTime;\r\n        const alpha = Math.max(1 - age / p.lifetime, 0);\r\n        p.x += p.vx;\r\n        p.y += p.vy;\r\n        ctx.beginPath();\r\n        ctx.arc(p.x, p.y, p.size, 0, Math.PI * 2);\r\n        ctx.fillStyle = `rgba(255, 255, 255, ${alpha * 0.05})`;\r\n        ctx.fill();\r\n        if (age > p.lifetime) {\r\n          particlesRef.current.splice(i, 1);\r\n        }\r\n      }\r\n      ctx.globalCompositeOperation = 'lighter';\r\n      for (let i = ripplesRef.current.length - 1; i >= 0; i--) {\r\n        const ripple = ripplesRef.current[i];\r\n        const elapsed = currentTime - ripple.startTime;\r\n        const progress = elapsed / 4500;\r\n        const radius = progress * ripple.maxRadius;\r\n        const opacity = Math.max(1 - progress, 0);\r\n        const lineWidth = 20;\r\n        const innerEdge = Math.max(radius - lineWidth / 2, 0);\r\n        const outerEdge = radius + lineWidth / 2;\r\n        const gradient = ctx.createRadialGradient(\r\n          ripple.x,\r\n          ripple.y,\r\n          innerEdge,\r\n          ripple.x,\r\n          ripple.y,\r\n          outerEdge\r\n        );\r\n        gradient.addColorStop(0, `rgba(255, 255, 255, ${opacity * 0.1})`);\r\n        gradient.addColorStop(1, `rgba(255, 255, 255, 0)`);\r\n        ctx.lineWidth = lineWidth;\r\n        ctx.strokeStyle = gradient;\r\n        ctx.beginPath();\r\n        ctx.arc(ripple.x, ripple.y, radius, 0, Math.PI * 2);\r\n        ctx.stroke();\r\n        if (progress >= 1) {\r\n          ripplesRef.current.splice(i, 1);\r\n        }\r\n      }\r\n      requestAnimationFrame(animate);\r\n    };\r\n\r\n    animate();\r\n\r\n    return () => {\r\n      window.removeEventListener('resize', setCanvasSize);\r\n      canvas.removeEventListener('click', handleClick);\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div style={{ position: 'relative', width: '100vw', height: '100vh' }}>\r\n      <canvas ref={canvasRef} style={{ display: 'block' }} />\r\n      {showWelcome && (\r\n        <div\r\n          onClick={(e) => {\r\n            if (audioContextRef.current.state === 'suspended') {\r\n              audioContextRef.current.resume();\r\n            }\r\n            playAmbientMusic();\r\n            // Fade out the overlay before removing it.\r\n            setWelcomeOpacity(0);\r\n            setTimeout(() => {\r\n              setShowWelcome(false);\r\n              // Do not trigger a ripple on the first tap.\r\n            }, 1000);\r\n          }}\r\n          style={{\r\n            position: 'absolute',\r\n            top: 0,\r\n            left: 0,\r\n            width: '100%',\r\n            height: '100%',\r\n            backgroundColor: 'rgba(0, 0, 0, 0.8)',\r\n            color: 'white',\r\n            display: 'flex',\r\n            flexDirection: 'column',\r\n            justifyContent: 'center',\r\n            alignItems: 'center',\r\n            textAlign: 'center',\r\n            zIndex: 10,\r\n            padding: '20px',\r\n            opacity: welcomeOpacity,\r\n            transition: 'opacity 1s ease',\r\n          }}\r\n        >\r\n          <h1>Welcome</h1>\r\n          <p>Tap anywhere to begin.</p>\r\n          <p style={{ fontSize: '0.8rem', marginTop: '10px' }}>\r\n            Turn on sound and disable silent mode for the full experience.\r\n          </p>\r\n          <p style={{ fontSize: '0.8rem', marginTop: '20px' }}>\r\n            made by{' '}\r\n            <a\r\n              href=\"https://x.com/bitcoinfool\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ color: 'white', textDecoration: 'underline' }}\r\n            >\r\n              @bitcoinfool\r\n            </a>{' '}\r\n            +{' '}\r\n            <a\r\n              href=\"https://react.dev/\"\r\n              target=\"_blank\"\r\n              rel=\"noopener noreferrer\"\r\n              style={{ color: 'white', textDecoration: 'underline' }}\r\n            >\r\n              React\r\n            </a>{' '}\r\n            + ChatGPT\r\n          </p>\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default RippleCanvas;\r\n","import React from 'react';\nimport RippleCanvas from './RippleCanvas';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <RippleCanvas />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}